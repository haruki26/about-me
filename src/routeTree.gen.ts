/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ProfielImport } from './routes/profiel'
import { Route as CreateImport } from './routes/create'
import { Route as ContactImport } from './routes/contact'
import { Route as IndexImport } from './routes/index'

// Create Virtual Routes

const FavoriteLazyImport = createFileRoute('/favorite')()

// Create/Update Routes

const FavoriteLazyRoute = FavoriteLazyImport.update({
  path: '/favorite',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/favorite.lazy').then((d) => d.Route))

const ProfielRoute = ProfielImport.update({
  path: '/profiel',
  getParentRoute: () => rootRoute,
} as any)

const CreateRoute = CreateImport.update({
  path: '/create',
  getParentRoute: () => rootRoute,
} as any)

const ContactRoute = ContactImport.update({
  path: '/contact',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/contact': {
      id: '/contact'
      path: '/contact'
      fullPath: '/contact'
      preLoaderRoute: typeof ContactImport
      parentRoute: typeof rootRoute
    }
    '/create': {
      id: '/create'
      path: '/create'
      fullPath: '/create'
      preLoaderRoute: typeof CreateImport
      parentRoute: typeof rootRoute
    }
    '/profiel': {
      id: '/profiel'
      path: '/profiel'
      fullPath: '/profiel'
      preLoaderRoute: typeof ProfielImport
      parentRoute: typeof rootRoute
    }
    '/favorite': {
      id: '/favorite'
      path: '/favorite'
      fullPath: '/favorite'
      preLoaderRoute: typeof FavoriteLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  ContactRoute,
  CreateRoute,
  ProfielRoute,
  FavoriteLazyRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/contact",
        "/create",
        "/profiel",
        "/favorite"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/contact": {
      "filePath": "contact.tsx"
    },
    "/create": {
      "filePath": "create.tsx"
    },
    "/profiel": {
      "filePath": "profiel.tsx"
    },
    "/favorite": {
      "filePath": "favorite.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
